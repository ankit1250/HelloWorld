import React from "react";
import { render, fireEvent } from "@testing-library/react";
import "@testing-library/jest-dom/extend-expect"; // Import for additional matchers
import DeleteModal from "./DeleteModal";

describe("DeleteModal component", () => {
  test("it renders the component and handles delete action", () => {
    // Mock data
    const DeleteLauncherMock = ({ children, onClick }) => (
      <button onClick={onClick}>{children}</button>
    );
    const actionMock = jest.fn();
    const cancelButtonTextMock = "Cancel";
    const deleteButtonTextMock = "Delete";
    const deleteBodyTextMock = "Are you sure you want to delete?";
    const propsMock = {
      deleteData: { id: 1, name: "Example" },
      heading: "Delete Confirmation",
      id: "delete-modal",
      children: "Delete",
    };

    // Render the component with mock props
    const { getByText, getByTestId, queryByText } = render(
      <DeleteModal
        component={DeleteLauncherMock}
        action={actionMock}
        cancelButtonText={cancelButtonTextMock}
        deleteButtonText={deleteButtonTextMock}
        deleteBodyText={deleteBodyTextMock}
        {...propsMock}
      />
    );

    // Assert that the DeleteLauncher component is rendered
    const deleteLauncherButton = getByText("Delete");
    expect(deleteLauncherButton).toBeInTheDocument();

    // Click on the DeleteLauncher to show the modal
    fireEvent.click(deleteLauncherButton);

    // Assert that the modal is shown
    const modalHeading = getByTestId("modal-heading");
    expect(modalHeading).toHaveTextContent("Delete Confirmation");

    // Assert that the modal body contains the correct deleteBodyText
    const modalBody = getByText("Are you sure you want to delete?");
    expect(modalBody).toBeInTheDocument();

    // Assert that the cancel and delete buttons are present in the modal
    const cancelButton = getByText("Cancel");
    expect(cancelButton).toBeInTheDocument();

    const deleteButton = getByText("Delete");
    expect(deleteButton).toBeInTheDocument();

    // Click on the delete button to trigger the handleDelete function
    fireEvent.click(deleteButton);

    // Assert that the action function is called with the correct deleteData
    expect(actionMock).toHaveBeenCalledWith({ id: 1, name: "Example" });

    // Assert that the modal is closed
    expect(queryByText("Delete Confirmation")).toBeNull();
  });
});
